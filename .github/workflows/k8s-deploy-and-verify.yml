name: Kubernetes Deployment and Verification

on:
  workflow_dispatch:

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          service_account: ${{ secrets.SA_EMAIL }}
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

  Kubernetes-Workflow:
    name: Deploy the k8s workflow 
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      id-token: 'write'
    steps: 
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Terraform Init
        working-directory: kubernetes_resource
        run: terraform init
        
      - name: Get Access Token for Terraform
        id: 'auth'
        uses: google-github-actions/auth@v1
        with:
          service_account: ${{ secrets.SA_EMAIL }}
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}

      - name: Terraform Apply
        working-directory: kubernetes_resource
        run: terraform apply -auto-approve
        env: 
          GOOGLE_OAUTH_ACCESS_TOKEN: ${{ steps.auth.outputs.access_token }}

  verify:
    name: Verify Deployment
    runs-on: ubuntu-latest
    needs: Kubernetes-Workflow
    steps:
      - name: Wait for deployment to stabilize
        run: sleep 60

      - name: Retrieve Kubernetes service IP
        run: |
          API_IP=$(kubectl get svc <service-name> -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "API_IP=$API_IP" >> $GITHUB_ENV

      - name: Test API Endpoint
        run: |
          RETRIES=5
          for i in $(seq 1 $RETRIES); do
            RESPONSE=$(curl --fail -s http://$API_IP/api || echo "Failed")
            if [ "$RESPONSE" != "Failed" ]; then
              echo "API is reachable. Response: $RESPONSE"
              exit 0
            fi
            echo "Attempt $i: API not reachable, retrying in 10 seconds..."
            sleep 10
          done
          echo "API verification failed after $RETRIES attempts."
          exit 1
